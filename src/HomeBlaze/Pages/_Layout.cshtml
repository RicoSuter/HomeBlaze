@using Microsoft.AspNetCore.Components.Web

@namespace HomeBlaze.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <base href="~/" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />

    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
   
    @* MudBlazor *@
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />

    @* FontAwesome *@
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" rel="stylesheet">

    @* RadzenChart *@
    <link rel="stylesheet" href="_content/Radzen.Blazor/css/default-base.css" />
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js"></script>

    @* Z.Blazor.Diagrams *@
    <link href="_content/Z.Blazor.Diagrams/style.min.css" rel="stylesheet" />
    <link href="_content/Z.Blazor.Diagrams/default.styles.min.css" rel="stylesheet" />
    <script src="_content/Z.Blazor.Diagrams/script.min.js"></script>
    
    <style>
        html, body {
            margin: 0;
            padding: 0;
            height: 100%;
        }

        .mud-main-content {
            height: 100%;
        }

        .edit-dialog {
            height: 600px; 
            overflow-y: auto
        }
        
        .input-pointer input {
            cursor: pointer;
        }
    </style>
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    <script src="_framework/blazor.server.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script>
         new MutationObserver((mutations, observer) => {
            if (document.querySelector('#components-reconnect-modal h5 a')) {
                // Now every 10 seconds, see if the server appears to be back, and if so, reload
                async function attemptReload() {
                    var response = await fetch(''); // Check the server really is back
                    if (response.ok) {
                        location.reload();
                    }
                }
                observer.disconnect();
                attemptReload();
                setInterval(attemptReload, 10000);
            }
        }).observe(document.body, { childList: true, subtree: true });
    </script>
</body>
</html>
