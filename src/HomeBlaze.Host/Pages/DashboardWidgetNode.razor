@using Blazor.Diagrams.Core.Geometry;
@using HomeBlaze.Abstractions.Services;
@using HomeBlaze.Components.Dialogs;

@inject IDialogService DialogService
@inject IThingManager ThingManager

<div @ondblclick="OnDoubleClick" @ontouchstart="OnTouchStart" 
     style="@(Node?.Widget.NoPointerEvents == true ? "" : "pointer-events: all")">
    <div style="@(Node?.Locked != true ? $"pointer-events: none; outline: 5px solid {OutlineColor}; outline-offset: -5px" : "")">
        @Node?.Widget.RenderFragment
    </div>
</div>

@code {
    [Parameter]
    public DashboardWidgetNodeModel? Node { get; set; }

    public string OutlineColor => Node?.Selected == true ? "Blue" : "Gray";

    private async void OnDoubleClick(MouseEventArgs args)
    {
        await EditThingAsync();
    }

    private DateTime _lastTapTime = DateTime.MinValue;
    private const int DoubleTapThreshold = 300;

    private async void OnTouchStart()
    {
        var currentTime = DateTime.Now;
      
        var timeDifference = (currentTime - _lastTapTime).TotalMilliseconds;
        if (timeDifference < DoubleTapThreshold)
        {
            await EditThingAsync();
        }

        _lastTapTime = currentTime;
    }

    private async Task EditThingAsync()
    {
        if (Node?.Locked == false && Node.Widget.Thing != null)
        {
            if (await ThingSetupDialog.EditThingAsync(DialogService, Node.Widget.Thing))
            {
                Node.Refresh();
            }
        }
    }
}